- name: Deploy the bot/app/worker on remote host
  hosts: intbot_app

  tasks:
    - name: Clone the repository to a specific version (to a temp location)
      git:
        repo: "{{ repository_url }}"
        dest: /tmp/src
        accept_hostkey: yes
        version: "{{ app_version }}"

    - name: Build with a given commit hash
      # This will be stored in local registry, and available as version to docker-compose
      # where we can just reference correct version
      shell: "cd /tmp/src && make docker/build V={{ app_version }}"

    - name: Create a server Makefile to manage app tasks
      ansible.builtin.template:
        src: ../templates/app/Makefile.app.j2
        dest: ./Makefile

    - name: Set up docker-compose.yml for the app
      ansible.builtin.template:
        src: ../templates/app/docker-compose.app.yml.j2
        dest: ./docker-compose.yml

    - name: Copy env file example
      ansible.builtin.copy:
        src: ../templates/app/intbot.env.example
        dest: intbot.env.example

    - name: Check if the env file exists
      ansible.builtin.stat:
        path: intbot.env
      register: env_file

    - name: If the env file doesn't exist - fail with error message
      ansible.builtin.fail:
        msg: "The env file doesn't exist. Please ssh, copy the example and adjust"
      when: not env_file.stat.exists

    - name: Start docker compose to see if everything is running
      shell: "docker compose up -d"

    - name: Migrate on prod
      shell: "make prod/migrate"

    - name: Configure scheduled message for standup
      become: yes
      cron:
        name: "Monday standup message"
        user: "{{ app_user }}"
        minute: "0"
        hour: "11"
        weekday: "1"
        job: "cd /home/{{ app_user }} && docker compose exec -T app make in-container/manage ARG='send_scheduled_message --type=standup'"
        state: present

    - name: Restart everything and finish
      shell: "docker compose up -d"
